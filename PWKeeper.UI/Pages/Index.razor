@page "/"
@inject StorageHandler Storage
@inject TestModel test

<PageTitle>Index</PageTitle>

<div>
    <div class="form-group">
        <label for="formGroupExampleInput">Login</label>
        <input type="text" class="form-control" id="formGroupExampleInput" placeholder="Example input" @bind="login" disabled=@loggedIn>
    </div>
    <div class="form-group">
        <label for="formGroupExampleInput2">Password</label>
        <input type="password" class="form-control" id="formGroupExampleInput2" placeholder="Another input" @bind="password" disabled=@loggedIn>
    </div>
    <button class="btn btn-primary mt-2" @onclick=SignIn disabled=@loggedIn>SignIn</button>
</div>
@if(storage != null) {
    @foreach(var item in storage) {
        <p>
            @item.Name
        </p>
    }
}
<div>
    <button @onclick=AddItem>test</button>
</div>
@test.Secret
@code {
    private string? login { get; set; }
    private string? password { get; set; }
    private List<StorageItemModel>? storage { get; set; }
    private bool loggedIn = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }


    private async void SignIn() { 
        if ((login != null) && (password != null) && (login != string.Empty) && (password != string.Empty))
        {
            storage = await Storage.Build(login, new LookyAlgo(password));
            loggedIn = true;
            login = string.Empty;
            password = string.Empty;
            StateHasChanged();
        }
    }
    private async void AddItem() {
        var item = new StorageItemModel
            {
                Name = "test",
                Description = "test",
                Email = "test",
                Login = "test"
            };
        await Storage.AddItemAsync(item);
        storage = Storage.GetStorage;
    }
}